using FuelStationProgram.Base;
using FuelStationProgram.Impl;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace FuelStationProgram.WUI
{
    public partial class TransactionForm : Form
    {
        
        public SqlConnection Conn { get; set; }
        public DataSet MasterData = new DataSet();
        public Transaction Transaction { get; set; }
        private BindingList<TransactionLine> TransactionLines { get; set; } = new BindingList<TransactionLine>();
        public TransactionForm()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            //crtlItemList.DataSource = new System.ComponentModel.BindingList<FuelStationProgram.Impl.Items>() /* TODO: Assign the real data here.*/;
            // This line of code is generated by Data Source Configuration Wizard
            crtlTransactionLines.DataSource = TransactionLines; /* TODO: Assign the real data here.*/;
        }

        private void TransactionForm_Load(object sender, EventArgs e)
        {
            SqlDataAdapter adapter = new SqlDataAdapter(Resources.SelectItems, Conn);
            adapter.Fill(MasterData);
            crtlItemList.DataSource = MasterData.Tables[0];
            
        }

        private void crtlAddItem_Click(object sender, EventArgs e)
        {
            AddSelectedItemToTransactionViewList();

        }

        

        private void crtlItemAmount_EditValueChanged(object sender, EventArgs e)
        {
            
        }

        private void crtlCancelTransaction_Click(object sender, EventArgs e)
        {
            Close();
        }

        private void crtlDeleteItem_Click(object sender, EventArgs e)
        {
            RemoveSelectedItem();
        }
        private void AddSelectedItemToTransactionViewList()
        {
            var selectedItem = gridView1.GetSelectedRows();
            var currentRow = gridView1.GetRow(selectedItem[0]) as DataRowView;
            var currentItemId = (Guid)currentRow.Row["ID"];
            var currentItemPrice = (decimal)currentRow.Row["Price"];
            var currentItemType = (ItemType)Enum.Parse(typeof(ItemType), currentRow.Row["ItemType"].ToString());
            var currentItemDescription = currentRow.Row["Description"].ToString();
            if (currentItemType == ItemType.Fuel && TransactionLines.Any(x => x.ItemType == ItemType.Fuel))
            {
                MessageBox.Show("Only one fuel item is allowed");
                return;
            }
            var itemAmount = crtlItemAmount.Value;
            TransactionLines.Add(new TransactionLine
            {
                ItemID = currentItemId,
                ItemPrice = currentItemPrice,
                Quantity = itemAmount,
                TransactionID = Transaction.ID,
                Value = itemAmount * currentItemPrice,
                ItemType = currentItemType,
                ItemDescription = currentItemDescription

            });
        }
        private void RemoveSelectedItem()
        {
            var selectedItem = gridView2.GetSelectedRows();
            var currentRow = gridView2.GetRow(selectedItem[0]) as TransactionLine;
            TransactionLines.Remove(TransactionLines.FirstOrDefault(x => x.ItemID == currentRow.ItemID));
        }
    }
}
